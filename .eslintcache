[{"D:\\Projects\\covid-dashboard\\src\\index.js":"1","D:\\Projects\\covid-dashboard\\src\\App.js":"2","D:\\Projects\\covid-dashboard\\src\\components\\CardHolder.js":"3","D:\\Projects\\covid-dashboard\\src\\components\\CountryCard.js":"4","D:\\Projects\\covid-dashboard\\src\\components\\SearchCard.js":"5","D:\\Projects\\covid-dashboard\\src\\components\\SearchCountry.js":"6","D:\\Projects\\covid-dashboard\\src\\components\\BarCard.js":"7","D:\\Projects\\covid-dashboard\\src\\components\\Covid.js":"8","D:\\Projects\\covid-dashboard\\src\\redux.js":"9"},{"size":332,"mtime":1607265047210,"results":"10","hashOfConfig":"11"},{"size":798,"mtime":1607318988744,"results":"12","hashOfConfig":"11"},{"size":1877,"mtime":1607316678441,"results":"13","hashOfConfig":"11"},{"size":680,"mtime":1607320421677,"results":"14","hashOfConfig":"11"},{"size":1676,"mtime":1607319118628,"results":"15","hashOfConfig":"11"},{"size":759,"mtime":1607319123431,"results":"16","hashOfConfig":"11"},{"size":2419,"mtime":1607314295656,"results":"17","hashOfConfig":"11"},{"size":861,"mtime":1607317157441,"results":"18","hashOfConfig":"11"},{"size":2387,"mtime":1607322857039,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1d8cilk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Projects\\covid-dashboard\\src\\index.js",[],["42","43"],"D:\\Projects\\covid-dashboard\\src\\App.js",["44"],"import {useEffect} from 'react';\nimport './App.css';\nimport CardHolder from './components/CardHolder';\nimport CountryCard from './components/CountryCard';\nimport SearchCard from './components/SearchCard';\nimport BarCard from './components/BarCard';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport {getCountries,getCountry} from './redux';\nfunction App(props) {\n  \n  props.getCountries()\n  return (\n    \n    <>\n    <div className=\"App\">\n      <div className=\"main-grid\">\n          <CardHolder/>\n          <CountryCard/>\n          <SearchCard/>\n         <BarCard/>\n      </div>\n    </div>\n    </>\n  );\n}\n\nconst mapDispatchToProps=dispatch=>{\n  return bindActionCreators({getCountries,getCountry},dispatch)\n}\n\n\nexport default connect(null,mapDispatchToProps)(App);\n","D:\\Projects\\covid-dashboard\\src\\components\\CardHolder.js",[],"D:\\Projects\\covid-dashboard\\src\\components\\CountryCard.js",["45"],"import React from 'react';\r\nimport './component.scss';\r\nimport {FaUser} from 'react-icons/fa'\r\nimport {connect} from 'react-redux'\r\nimport {motion} from 'framer-motion'\r\nfunction CountryCard({country,loading}) {\r\n    return (\r\n       \r\n           <motion.div\r\n        transition={{duration:.8}}\r\n        whileHover={{ opacity:.8 }}\r\n        className=\"country-card\">\r\n            <p>Affected Country</p>\r\n            <h1>{!loading &&country &&country.country}</h1>\r\n        </motion.div>\r\n       \r\n        \r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {country:state.selectedCountry,loading:state.loading}\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(CountryCard)\r\n","D:\\Projects\\covid-dashboard\\src\\components\\SearchCard.js",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./component.scss\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport SearchCountry from \"./SearchCountry\";\r\nimport Covid from \"./Covid\";\r\nimport { connect } from \"react-redux\";\r\nfunction SearchCard(props) {\r\n  const [countries, setCountries] = useState(props.countries);\r\nuseEffect(()=>{\r\n\r\n    setCountries(props.countries)\r\n},[props.loading])\r\n  const onChange = (e) => {\r\n    const SearchTerm = e?e.target.value:'';\r\n    const possibleResults =props.countries&& props.countries.filter((country) =>\r\n      country.country.toLowerCase().includes(SearchTerm.toLowerCase())\r\n    );\r\n    setCountries(possibleResults)\r\n  };\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"search-card\">\r\n        <div className=\"search-holder\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-text\"\r\n            placeholder=\"Country Name\"\r\n            onChange={onChange}\r\n          />\r\n          <FaSearch className=\"icon\" />\r\n        </div>\r\n        <div className=\"countries\">{\r\n            !props.loading && countries.map(country=>{\r\n                return(\r\n                    <SearchCountry\r\n                    country={country.country}\r\n                    img={country.countryInfo.flag}\r\n                    cases={country.cases}\r\n                    name={country.countryInfo.iso2}\r\n                  />\r\n                )\r\n            })\r\n        }</div>\r\n      </div>\r\n      <Covid />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { countries: state.countries,loading:state.loading };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SearchCard);\r\n","D:\\Projects\\covid-dashboard\\src\\components\\SearchCountry.js",[],"D:\\Projects\\covid-dashboard\\src\\components\\BarCard.js",[],"D:\\Projects\\covid-dashboard\\src\\components\\Covid.js",[],"D:\\Projects\\covid-dashboard\\src\\redux.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":9,"nodeType":"53","messageId":"54","endLine":1,"endColumn":18},{"ruleId":"51","severity":1,"message":"55","line":3,"column":9,"nodeType":"53","messageId":"54","endLine":3,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":12,"column":3,"nodeType":"58","endLine":12,"endColumn":18,"suggestions":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FaUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.countries'. Either include it or remove the dependency array. If 'setCountries' needs the current value of 'props.countries', you can also switch to useReducer instead of useState and read 'props.countries' in the reducer.","ArrayExpression",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [props.countries, props.loading]",{"range":"65","text":"66"},[391,406],"[props.countries, props.loading]"]